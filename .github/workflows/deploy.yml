
name: deploy


# active when push tag v0.0.1 
on:
  push:
    tags:
      - 'v*'

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
        
          
          
      # spring jar build ######################################
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: "11"
          distribution: "adopt"
          cache: gradle
          check-latest: true

      - name: Grant execute permission for gradlew
        working-directory: ./spring.stock
        run: chmod +x gradlew
        
      - name: Build with Gradle
        working-directory: ./spring.stock
        run: ./gradlew build
        
          
        
      # spring docker build ######################################
      -
        name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
            
      -
        name: Docker meta
        id: meta1
        uses: docker/metadata-action@v4
        with:
          images: ttop324/spring.stock            
            
      -
        name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: ./spring.stock
          file: ./spring.stock/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta1.outputs.tags }}
          labels: ${{ steps.meta1.outputs.labels }}
            
            

      # nuxt docker build ######################################
      -
        name: Docker meta
        id: meta2
        uses: docker/metadata-action@v4
        with:
          images: ttop324/nuxt.stock            
            
      -
        name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: ./nuxt.stock
          file: ./nuxt.stock/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta2.outputs.tags }}
          labels: ${{ steps.meta2.outputs.labels }}
            
            


      # aws deploy ######################################
      

      - name: copy source via ssh key
        uses: burnett01/rsync-deployments@5.2
        with:
          switches: -avzr
          path: "./deploy/"
          remote_path: "~/"
          remote_host: ${{ secrets.HOST }}
          remote_user: ${{ secrets.USERNAME }}
          remote_key: ${{ secrets.KEY }}
          remote_port:  ${{ secrets.PORT }}

      - name: executing remote ssh commands using password
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          port: ${{ secrets.PORT }}
          script: |
            sudo docker stack deploy -c docker-compose.yml web

# only updated images
# sudo docker stack deploy -c docker-compose.yml --resolve-image=changed web